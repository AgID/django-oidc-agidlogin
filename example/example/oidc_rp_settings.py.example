from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent

PORT = 8099
BASE_URL = f'https://127.0.0.1:{PORT}'


JWTCONN_OIDC_RP = {
    'port': PORT, 
    'base_url': BASE_URL, 
            
    'httpc_params': {'verify': False}, 
    
    
    'key_defs': [
        {'type': 'RSA', 'key': '', 'use': ['sig']}, 
        {'type': 'EC', 'crv': 'P-256', 'use': ['sig']}], 
    'rp_keys': {'private_path': f'{BASE_DIR}/private/jwks.json', 
                'key_defs': [
                    {'type': 'RSA', 'key': '', 'use': ['sig']}, 
                    {'type': 'EC', 'crv': 'P-256', 'use': ['sig']}], 
                'public_path': f'{BASE_DIR}/static/jwks.json', 
                'read_only': False
               }, 
    
    'client_preferences': {
        'application_name': 'rp_test', 
        'application_type': 'web', 
        'contacts': ['ops@example.com'], 
        'response_types': ['code'], 
        'scope': ['openid', 'profile', 'email'], 
        'token_endpoint_auth_method': ['client_secret_basic', 'client_secret_post']
    }, 
    'services': {
        'discovery': {
            'class': 'oidcservice.oidc.provider_info_discovery.ProviderInfoDiscovery', 
            'kwargs': {}
        }, 
        'registration': {
            'class': 'oidcservice.oidc.registration.Registration', 
            'kwargs': {}
        }, 
        'authorization': {
            'class': 'oidcservice.oidc.authorization.Authorization', 
            'kwargs': {}
        }, 
        'accesstoken': {
            'class': 'oidcservice.oidc.access_token.AccessToken', 
            'kwargs': {}
        }, 
        'userinfo': {
            'class': 'oidcservice.oidc.userinfo.UserInfo', 
            'kwargs': {}
        }, 
        'end_session': {
            'class': 'oidcservice.oidc.end_session.EndSession', 
            'kwargs': {}
        }
    }, 
    'clients': 
        {'': 
            {
                'client_preferences': 
                    {'application_name': 'rp_test', 
                     'application_type': 'web', 
                     'contacts': ['ops@example.com'], 
                     'response_types': ['code'], 
                     'scope': ['openid', 'profile', 'email'], 
                     'token_endpoint_auth_method': ['client_secret_basic', 'client_secret_post']
                    }, 
                'redirect_uris': 'None', 
                'services': {
                    'discovery': {
                         'class': 'oidcservice.oidc.provider_info_discovery.ProviderInfoDiscovery', 
                         'kwargs': {}
                        }, 
                    'registration': {
                         'class': 'oidcservice.oidc.registration.Registration', 
                         'kwargs': {}
                        }, 
                    'authorization': {
                         'class': 'oidcservice.oidc.authorization.Authorization', 
                         'kwargs': {}
                        }, 
                    'accesstoken': {
                        'class': 'oidcservice.oidc.access_token.AccessToken', 
                        'kwargs': {}
                        }, 
                    'userinfo': {
                        'class': 'oidcservice.oidc.userinfo.UserInfo', 
                        'kwargs': {}
                        }, 
                    'end_session': {
                        'class': 'oidcservice.oidc.end_session.EndSession', 
                        'kwargs': {}
                    }
                }
            }, 
        'that_test_issuer': {
            'client_preferences': 
                {'application_name': 'another_rp_test_app', 
                 'application_type': 'web', 
                 'contacts': ['ops@example.com'], 
                 'response_types': ['code'], 
                 'scope': ['openid', 'profile', 'email'], 
                 'token_endpoint_auth_method': ['client_secret_basic', 'client_secret_post']
                }, 
            'client_id': 'das6ftasd8f6as87f6as8976fas87d6fas', 
            'client_secret': 'sdf7sdf7sdf897sd9fsdfsd-sdfsdf', 
            'redirect_uris': [f'{BASE_URL}/rp/authz_cb/agid_login'], 
            'issuer': 'https://that.provider.it/', 
            'services': {
                'discovery': {
                    'class': 'oidcservice.oidc.provider_info_discovery.ProviderInfoDiscovery', 
                    'kwargs': {}
                }, 
                'registration': {
                    'class': 'oidcservice.oidc.registration.Registration', 
                    'kwargs': {}
                }, 
                'authorization': {
                    'class': 'oidcservice.oidc.authorization.Authorization', 
                    'kwargs': {}
                }, 
                'accesstoken': {
                    'class': 'oidcservice.oidc.access_token.AccessToken', 
                    'kwargs': {}
                }
            }, 
            'add_ons': {
                'pkce': {
                    'function': 'oidcservice.oidc.add_on.pkce.add_pkce_support', 
                    'kwargs': {
                        'code_challenge_length': 64, 
                        'code_challenge_method': 'S256'
                    }
                }
            }
        }
    }
}
